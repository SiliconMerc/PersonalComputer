function Apple.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
pop this 0
push argument 1
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
pop this 1
push constant 16
pop this 2
push pointer 0
push this 0
push this 1
call Apple.draw 3
pop temp 0
push pointer 0
return
function Apple.getX 0
push argument 0
pop pointer 0
push this 0
return
function Apple.getY 0
push argument 0
pop pointer 0
push this 1
return
function Apple.getSize 0
push argument 0
pop pointer 0
push this 2
return
function Apple.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Apple.draw 1
push argument 0
pop pointer 0
push constant 16384
push pointer 0
push argument 1
push argument 2
call Apple.getLocation 3
add
pop local 0
push local 0
push constant 0
add
push constant 7536
call Memory.poke 2
pop temp 0
push local 0
push constant 0
add
push constant 256
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 14652
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 32126
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 16380
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 16368
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 8160
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Apple.erase 1
push argument 0
pop pointer 0
push constant 16384
push pointer 0
push argument 1
push argument 2
call Apple.getLocation 3
add
pop local 0
push local 0
push constant 0
add
push constant 256
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Apple.getLocation 1
push argument 0
pop pointer 0
push argument 1
push this 2
add
push constant 512
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 512
push this 2
sub
pop argument 1
label IF_FALSE0
push argument 2
push this 2
add
push constant 256
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 256
push this 2
sub
pop argument 2
label IF_FALSE1
push argument 2
push constant 32
call Math.multiply 2
push argument 1
push constant 16
call Math.divide 2
add
pop local 0
push local 0
return
